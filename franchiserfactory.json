{"compiler":{"version":"0.8.15+commit.e14f2714"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"contract IVotingToken","name":"votingToken_","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[{"internalType":"uint256","name":"length0","type":"uint256"},{"internalType":"uint256","name":"length1","type":"uint256"}],"name":"ArrayLengthMismatch","type":"error"},{"inputs":[],"name":"FORCE_RECOMPILE","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"INITIAL_MAXIMUM_SUBDELEGATEES","outputs":[{"internalType":"uint96","name":"","type":"uint96"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"franchiserImplementation","outputs":[{"internalType":"contract Franchiser","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"delegatee","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"fund","outputs":[{"internalType":"contract Franchiser","name":"franchiser","type":"address"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address[]","name":"delegatees","type":"address[]"},{"internalType":"uint256[]","name":"amounts","type":"uint256[]"}],"name":"fundMany","outputs":[{"internalType":"contract Franchiser[]","name":"franchisers","type":"address[]"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"delegatee","type":"address"}],"name":"getFranchiser","outputs":[{"internalType":"contract Franchiser","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"delegatee","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"permitAndFund","outputs":[{"internalType":"contract Franchiser","name":"","type":"address"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address[]","name":"delegatees","type":"address[]"},{"internalType":"uint256[]","name":"amounts","type":"uint256[]"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"permitAndFundMany","outputs":[{"internalType":"contract Franchiser[]","name":"franchisers","type":"address[]"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"delegatee","type":"address"},{"internalType":"address","name":"to","type":"address"}],"name":"recall","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address[]","name":"delegatees","type":"address[]"},{"internalType":"address[]","name":"tos","type":"address[]"}],"name":"recallMany","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"votingToken","outputs":[{"internalType":"contract IVotingToken","name":"","type":"address"}],"stateMutability":"view","type":"function"}],"devdoc":{"errors":{"ArrayLengthMismatch(uint256,uint256)":[{"params":{"length0":"The length of the first array argument.","length1":"The length of the second array argument."}}]},"kind":"dev","methods":{"fund(address,uint256)":{"details":"Requires the sender of the call to have approved this contract for `amount`.      If a Franchiser does not yet exist, one is created.","params":{"amount":"The amount of `votingToken` to allocate.","delegatee":"The target `delegatee`."},"returns":{"franchiser":"The Franchiser contract."}},"fundMany(address[],uint256[])":{"details":"Requires the sender of the call to have approved this contract for sum of `amounts`.","params":{"amounts":"The amounts of `votingToken` to allocate.","delegatees":"The target `delegatees`."},"returns":{"franchisers":"The Franchiser contracts."}},"getFranchiser(address,address)":{"details":"Returns the address of the Franchiser even it it does not yet exist,      thanks to CREATE2.","params":{"delegatee":"The target `delegatee`.","owner":"The target `owner`."},"returns":{"_0":"The Franchiser contract, whether or not it exists yet."}},"permitAndFund(address,uint256,uint256,uint8,bytes32,bytes32)":{"details":"The signature must have been produced by the sender of the call.      If a Franchiser does not yet exist, one is created.","params":{"amount":"The amount of `votingToken` to allocate.","deadline":"A timestamp which the current timestamp must be less than or equal to.","delegatee":"The target `delegatee`.","r":"Must produce valid secp256k1 signature from the holder along with `v` and `s`.","s":"Must produce valid secp256k1 signature from the holder along with `v` and `r`.","v":"Must produce valid secp256k1 signature from the holder along with `r` and `s`."},"returns":{"_0":"The Franchiser contract."}},"permitAndFundMany(address[],uint256[],uint256,uint8,bytes32,bytes32)":{"details":"The permit must be for the sum of `amounts`.","params":{"amounts":"The amounts of `votingToken` to allocate.","deadline":"A timestamp which the current timestamp must be less than or equal to.","delegatees":"The target `delegatees`.","r":"Must produce valid secp256k1 signature from the holder along with `v` and `s`.","s":"Must produce valid secp256k1 signature from the holder along with `v` and `r`.","v":"Must produce valid secp256k1 signature from the holder along with `r` and `s`."},"returns":{"franchisers":"The Franchiser contracts."}},"recall(address,address)":{"details":"No-op if a Franchiser does not exist.","params":{"delegatee":"The target `delegatee`.","to":"The `votingToken` recipient."}},"recallMany(address[],address[])":{"params":{"delegatees":"The target `delegatees`.","tos":"The `votingToken` recipients."}}},"stateVariables":{"INITIAL_MAXIMUM_SUBDELEGATEES":{"details":"Decreases by half every level of nesting.      Of type uint96 for storage packing in Franchiser contracts.","return":"The intial maximum number of `subDelegatee` addresses.","returns":{"_0":"The intial maximum number of `subDelegatee` addresses."}},"franchiserImplementation":{"details":"Used as part of an EIP-1167 proxy minimal proxy setup.","return":"The Franchiser implementation contract.","returns":{"_0":"The Franchiser implementation contract."}}},"version":1},"userdoc":{"errors":{"ArrayLengthMismatch(uint256,uint256)":[{"notice":"Emitted when two array arguments have different cardinalities."}]},"kind":"user","methods":{"INITIAL_MAXIMUM_SUBDELEGATEES()":{"notice":"The initial value for the maximum number of `subDelegatee` addresses that a Franchiser         contract can have at any one time."},"franchiserImplementation()":{"notice":"The implementation contract used to clone Franchiser contracts."},"fund(address,uint256)":{"notice":"Funds the Franchiser contract associated with the `delegatee`         from the sender of the call."},"fundMany(address[],uint256[])":{"notice":"Calls fund many times."},"getFranchiser(address,address)":{"notice":"Looks up the Franchiser associated with the `owner` and `delegatee`."},"permitAndFund(address,uint256,uint256,uint8,bytes32,bytes32)":{"notice":"Funds the Franchiser contract associated with the `delegatee`         using a signature."},"permitAndFundMany(address[],uint256[],uint256,uint8,bytes32,bytes32)":{"notice":"Calls permitAndFund many times."},"recall(address,address)":{"notice":"Recalls funds in the Franchiser contract associated with the `delegatee`."},"recallMany(address[],address[])":{"notice":"Calls recall many times."},"votingToken()":{"notice":"The `votingToken` of the contract."}},"version":1}},"settings":{"compilationTarget":{"contracts/FranchiserFactory.sol":"FranchiserFactory"},"evmVersion":"london","libraries":{},"metadata":{"bytecodeHash":"ipfs"},"optimizer":{"enabled":false,"runs":200},"remappings":[]},"sources":{"contracts/Franchiser.sol":{"keccak256":"0x3ccb63333acc6712522b9296c708f26ba9b59c705ec6c44b12d021b8d529a470","license":"GPL-3.0-or-later","urls":["bzz-raw://d3448b1c8d7843f927975b148a8c6f564fd6f79bab2236657700f697fbd60287","dweb:/ipfs/QmQaRxfjCCrcru4XqEnNMWz3K5jwJEoMLpHnsK17jr2QVv"]},"contracts/FranchiserFactory.sol":{"keccak256":"0xbf3a929f55083c04332cee7672da28cde0cba53014765cab0488d6846b7f9bc1","license":"GPL-3.0-or-later","urls":["bzz-raw://6d2a473db64d67d7b181c00ffb7965fdd96d28c3b63bb7eefbae996a4b090f84","dweb:/ipfs/QmUSAxGp5gTqpWFyXuC54C4zXBKg27GZHMwX3VyVGABRa9"]},"contracts/base/FranchiserImmutableState.sol":{"keccak256":"0x1df2afb04a2dceaf440fc2a6e416fef2c2495c27faeb9d15491936289c45251f","license":"GPL-3.0-or-later","urls":["bzz-raw://ebb2d359743716e59bcaf9f6420814e8ac1cf0645a32b3261dd8f5f753cfe582","dweb:/ipfs/QmcEQbVxschSoosW1L922YWVUUQPowuRXhWqMt7YrstY7D"]},"contracts/interfaces/Franchiser/IFranchiser.sol":{"keccak256":"0xe449b1fdaab7e0a0659c8d3137918c656e15940b1d013bbfff94832690230a0d","license":"GPL-3.0-or-later","urls":["bzz-raw://255b7d5ae12e6a5c49a101e8b2cb04632a0c5f1bce2c01cd15e8243fa5905c11","dweb:/ipfs/QmeyrCNCBrdYQ8o5o5Ja4MyUNAvUVCeiRSvR3EKNMw19s3"]},"contracts/interfaces/Franchiser/IFranchiserErrors.sol":{"keccak256":"0xe44a63d094db74ff85c16a80e6500a22b2a223e3290d7be4b59dd45bf043527f","license":"GPL-3.0-or-later","urls":["bzz-raw://8bf34890946096bf1094d40e7c2c4d9669e032bfdaaa730dee421c92374ed0da","dweb:/ipfs/QmPnQWTxRZ7sPGnti74Gpsy8A8KAgVKU2M3JT2hcEyHePn"]},"contracts/interfaces/Franchiser/IFranchiserEvents.sol":{"keccak256":"0xf63d059894d35039773873343250ec5ca3d371c47aa1752c65ffa508937f4d8e","license":"GPL-3.0-or-later","urls":["bzz-raw://306a625e1f1122d79949996f95ac395bf6f2f7071df91e4eece2aab5abd02d03","dweb:/ipfs/QmbS6fUHmXP1QnK6jj2JyFcqq6hRZ5f7G1jW3hZ3o1PsGC"]},"contracts/interfaces/FranchiserFactory/IFranchiserFactory.sol":{"keccak256":"0x2138f485ce94a002b7f3f3ff6f2abb809f0a48db3c318d55368f0eebb400a585","license":"GPL-3.0-or-later","urls":["bzz-raw://9b8bc5ce0c2de28bb566a0a3dd5518eae7c5baf007c50b905db6ab14bea0d77b","dweb:/ipfs/QmVDHrL8pAx61BdCPf3dJ9KU6gwDkP9LynJoXtxDKz9FaR"]},"contracts/interfaces/FranchiserFactory/IFranchiserFactoryErrors.sol":{"keccak256":"0xce9c436875a88f725e025f0ccba21295231d58d390445b755e8bc2698988d0fc","license":"GPL-3.0-or-later","urls":["bzz-raw://caf8e4ea1e6d3a7267f02424b7c2e80ef60088f8be6f8071e5ba1787efeb4b42","dweb:/ipfs/QmW6nCUQA82SWKp6LmkLSe4zs5LKdMakD7hHi3wJaKt4vm"]},"contracts/interfaces/IFranchiserImmutableState.sol":{"keccak256":"0x2d77b0e938ed890f471ff96f5268e7a25cb78d92047cfdcba41f0a6550c5c1c6","license":"GPL-3.0-or-later","urls":["bzz-raw://87dfc05abb4a2982749b9761d36322a502699cbc8fe5db1a60f5fc369b12f801","dweb:/ipfs/QmNygZurkitc4rEoJfXXpvGL2kQAX18G3EmSSpSgLNyrkP"]},"contracts/interfaces/IVotingToken.sol":{"keccak256":"0x7478d0424dd00de3cd749609ad9bf54550555b1fea7cfb211f1b7bd86ff2180f","license":"GPL-3.0-or-later","urls":["bzz-raw://5414155028628dc96d3d221f27b225e25019bd5b44687bfb56069ffa823c9865","dweb:/ipfs/QmVM17ix1afVYCUCDchuFzgzPitMbRPYndmrk3v9JU3KD3"]},"lib/openzeppelin-contracts/contracts/governance/utils/IVotes.sol":{"keccak256":"0xde0a50e24489e86fbcb3f4b7787c8a4202ca387be4252dcfc9bfc00490aed9a7","license":"MIT","urls":["bzz-raw://78e7a4995b2cbb1f6f570a5fa8d7c7c217c1e0ba615b0f2e550ae43ae9d8f564","dweb:/ipfs/QmNuk9w5HsKSGiFD2v3EQdnM9EMgZ3dV34R51CSFG3wSPn"]},"lib/openzeppelin-contracts/contracts/proxy/Clones.sol":{"keccak256":"0x23c08b5dd8c509bd813274a1a79850ac8731bbf497b3a80a6667b51af3b4ba8b","license":"MIT","urls":["bzz-raw://0b8760a2ece164a4a68daca963568f8cffde72e1a9c5dfebaf7c434db28d31c8","dweb:/ipfs/QmP7mZfc2PNmWXLsWVDBh9Bu6MZBxRf5K1N23JduuqURHT"]},"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol":{"keccak256":"0x743aecd6496301fa0dfd63a14e7ed8878be11a6ff29e19f3fec815407455e720","license":"MIT","urls":["bzz-raw://b9fcc199b42eda8f9fe2c9c013371ade870224495d4d3d230f92a8cf6f7761bc","dweb:/ipfs/QmXNRDTDwKsqrEyHprtiYgbF2FrvBZvuYN2viXbPLnLkJ9"]},"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol":{"keccak256":"0xdd286f7283325eb12ee50e41dac6be9665262e827b66f4f8952111ff77b6a130","license":"MIT","urls":["bzz-raw://567e5cfe5c64fb8c5f041393d42178447cf00880a2a2172a5a8e83131e1c24fa","dweb:/ipfs/QmY6KVSBk5xbtZuyhcQPNyJAATMZnmJ45TcBBAE7rzD5du"]},"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/ERC20Votes.sol":{"keccak256":"0xf79c590095c58261fcca0893ec3c3f72006833a79c09eff1d672ee4058cd3179","license":"MIT","urls":["bzz-raw://1bafce8e7e48ffa6ab30c340225debc4c58b54d22028da803d1b0722b1c4deef","dweb:/ipfs/QmeopD5GnU9LLtTLMStPsX6TrTS4RjrgPTMz2iQgEnCubf"]},"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"keccak256":"0x0270cb4e50d6bcdd780df229606076d39df796860d266b5426f374c36f34fe89","license":"MIT","urls":["bzz-raw://511db944b3f0a57b56fda90d1e466cca6a0dea2297d816251966c8f025313973","dweb:/ipfs/QmRgu5uCaKkoRr3amWGfhy6bVwhpH5tr1vynaNQyEYiE4p"]},"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/draft-ERC20Permit.sol":{"keccak256":"0x0bfa94e815d89a2dbd4a522c00cfc2376f58a409340c4365927bc33582e87805","license":"MIT","urls":["bzz-raw://2468e61a92f6f3c8361fab4fbf04348526bdd63b981d5cf7cec17f5d9942f636","dweb:/ipfs/QmPDBsSh9PFyhr1NbHGqs52kuDuV7SW1j4PPmdxXqH1rnK"]},"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/draft-IERC20Permit.sol":{"keccak256":"0x86bd9e04dbee51fb3a9370279a0177e9da874a858dfb2c25a405171aa5ae2030","license":"MIT","urls":["bzz-raw://1b1f9a3add1a5670683e8477cd4a3aece458f60872e57c0e005282891c1ae03f","dweb:/ipfs/QmYzjghJuXKk9bPTMDcNhoM574w41iXqWLvNKctRwUdN1R"]},"lib/openzeppelin-contracts/contracts/utils/Address.sol":{"keccak256":"0x7cc4e7c4325a6bd6445f757cd8dc13839d130a638a97e46ca76d9894766ebf8e","license":"MIT","urls":["bzz-raw://f5361767bdbc08a5b04f66a2fba13ff75171af4fe3a17f567c1d3d3a69d4bd19","dweb:/ipfs/QmS9ZqJeShhYoHZBFs64k48pKwe4j7NXCRuDxk9tHQLzAS"]},"lib/openzeppelin-contracts/contracts/utils/Context.sol":{"keccak256":"0x81d5fc973a522c8909d60be6a201869d46aa47b030b8813f60616404628c2b94","license":"MIT","urls":["bzz-raw://9755b505799e622d964a843a8ed1fd60fedffca230178e5cb95ae9280df4dcd2","dweb:/ipfs/QmRkhUYUUgRZ2QYJjmtQct2ubyYwS3bdUMhbuFYM12VfYn"]},"lib/openzeppelin-contracts/contracts/utils/Counters.sol":{"keccak256":"0x45f2d503ebecf25ea4b038d02a7ed96898bd197bec585d0ba3560bfb4b509a82","license":"MIT","urls":["bzz-raw://c87b73d7c9c7773c8d2b06e3f38d88a3980c04016bb44967ecacfa5ac45bc62b","dweb:/ipfs/QmbQVT9fpAxMQ492735rZzUK2e73ayqdZz2fGPgey8jCVR"]},"lib/openzeppelin-contracts/contracts/utils/Strings.sol":{"keccak256":"0x2340652d89057e68adedd2bc12877a3fedace72562b1d8b03643e8ae2fbe973f","license":"MIT","urls":["bzz-raw://6377c8fcde8315dddfcf87b317b89cf2cb48aaa94df1a215997efe34f9bc0c96","dweb:/ipfs/QmdC6rkyzfJ6YHpypKztoerPYJAwRpXN4BEnPBtdv7g2id"]},"lib/openzeppelin-contracts/contracts/utils/cryptography/ECDSA.sol":{"keccak256":"0x317a25771c763d53758113839c204f8a781482bb313a242780f73a77464718fb","license":"MIT","urls":["bzz-raw://75593af518680995c6ed3aa242a8ec5a36c241270543011ee1c473bc617f3c97","dweb:/ipfs/QmaBVbjxpwsgVPtkcMva4nYLxcRvQwL89TJc2aQqV47AXf"]},"lib/openzeppelin-contracts/contracts/utils/cryptography/draft-EIP712.sol":{"keccak256":"0xc3cd851e3f4026a06510ff94c02c58160d7fcf287efdb04a2e71b2daed094820","license":"MIT","urls":["bzz-raw://973dc434ecfa676de1fe2e97dd22fd3ddc231140435774583c31709afdf41c12","dweb:/ipfs/QmR2ESNCZBCsXgGVe5jMPWaNb8sM3sXQQjcQTZrmnxjM6w"]},"lib/openzeppelin-contracts/contracts/utils/math/Math.sol":{"keccak256":"0xf977cc10a7914bf1dee7fa8faf5b26dca3d5bf213293cb7a0c747ff3ab580065","license":"MIT","urls":["bzz-raw://16aeb7e86685a7163522f5e618a7372721b9e6f7cc39e5b820397e12edb2deb8","dweb:/ipfs/QmYvyg89BwRDyaQzo3c9fwrWRWw77aFvjWn9tv7dhrGbtF"]},"lib/openzeppelin-contracts/contracts/utils/math/SafeCast.sol":{"keccak256":"0xbd19347dbf5685d9b683d6edf95bc849eae7efe8d0f7f1e08b24e2d678941e42","license":"MIT","urls":["bzz-raw://50e898dfbcf5f75b10c236ff76c636739e172f73a68391d40c9a72976260330e","dweb:/ipfs/QmYwuY5ufrkRtg1UQRHktq1NZfn22LF7BfEWN3zbGuqmnt"]},"lib/openzeppelin-contracts/contracts/utils/structs/EnumerableSet.sol":{"keccak256":"0x864f5fa91684f930c89d26bc04ef982aacb98de8919fac439288d532e0d70042","license":"MIT","urls":["bzz-raw://ccfd5ac7e9d2d2289ccf89c1a901e843d9d273ca3195d4bb115804ebe7e6aee2","dweb:/ipfs/QmbY4unUi38GpfaYxwUBXPX7sREtE6hzxtog6x8W6yDhjN"]},"lib/solmate/src/tokens/ERC20.sol":{"keccak256":"0x8d662fa38a1129c3f86ae334f646b5db4fe0a0de25d0782d86e275975e3dc75c","license":"AGPL-3.0-only","urls":["bzz-raw://ec1d69baa70ce48c6572825ee05242b0dce52bf30db79584aced35bf52fdfc7b","dweb:/ipfs/QmURvFnhBo6EkDR3voSP71vaQzpp8UG57yZRTBQ1TW4s8S"]},"lib/solmate/src/utils/SafeTransferLib.sol":{"keccak256":"0x7c0075dca9374db749ed3fc781fd901694cf987812e3ef7c464d7df63de3e03a","license":"AGPL-3.0-only","urls":["bzz-raw://3a0d446ca143e521697eeefc9406b63de349b472b4b89450cd9f81684eaa5388","dweb:/ipfs/QmUQxTxiqdh6zDw997Jwyr7onEBxZAhgWUcZSqXntc5jSY"]},"openzeppelin-contracts/utils/Address.sol":{"keccak256":"0x96722cac4c57162164cebc9dc7ea24ac98d503c63bb60136808fa0e68fa6a1b4","license":"MIT","urls":["bzz-raw://5e57e6f197fac49777e73e5430a3c24e3816892b439c397141e272c88c39c3ba","dweb:/ipfs/QmRhB3moEGHspqNfAdpj4oDgYv3iKfqgxgSp6PftQDCAbT"]},"solmate/src/auth/Owned.sol":{"keccak256":"0xfedb27d14c508342c33eb067c9a02eabcdb0f9dcf93b04ded1001f580d12d0ea","license":"AGPL-3.0-only","urls":["bzz-raw://1ff52bbee698b9cf9e4574615e6550be0887ccf355f6571e23d6f25b332e79b4","dweb:/ipfs/QmVorA2apojVRStzS7h8aFccR3Uv32G6HVtBtFHZrE7YXx"]},"solmate/src/tokens/ERC20.sol":{"keccak256":"0xcdfd8db76b2a3415620e4d18cc5545f3d50de792dbf2c3dd5adb40cbe6f94b10","license":"AGPL-3.0-only","urls":["bzz-raw://57b3ab70cde374af1cf2c9888636e8de6cf660f087b1c9abd805e9271e19fa35","dweb:/ipfs/QmNrLDBAHYFjpjSd12jerm1AdBkDqEYUUaXgnT854BUZ97"]},"solmate/src/utils/SafeTransferLib.sol":{"keccak256":"0x6ab948013c2c7ca6351e593600425b0ec6df9035320280c678e735bce16e996b","license":"AGPL-3.0-only","urls":["bzz-raw://2ab977d0eeb2bf458f9798250215c646d2f3b1f90b5a7e2b506fdf3335c0f060","dweb:/ipfs/QmYPRoPhNtBAmCSq7imN1scMVpKNQvMTpoqab3tXUx5Tnv"]}},"version":1}
